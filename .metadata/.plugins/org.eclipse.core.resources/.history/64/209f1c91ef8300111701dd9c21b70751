package info2.staticsearching;

public class SearchElement<T> {
	/**
	 * 
	 * @param a
	 * @return
	 */
	public int binarySearch(T x,Comparable<T>[] a) {
		int low = 0;
		int high = a.length - 1;
		int mid;
		while (low <= high) {
			mid = (low + high) / 2;
			if (a[mid].compareTo(x) < 0) {
				low = mid + 1;
			} else if (a[mid].compareTo(x) > 0) {
				high = mid + 1;
			} else {
				return mid;
			}
		}
		
		//throw new ItemNotFound("BinSearch fails");
		return -1;
	}
	/**
	 * 
	 * @param a
	 * @return
	 */
	public int binarySearch(T x,Comparable<T>[] a) {
		int low = 0;
		int high = a.length - 1;
		int mid;
		while (low <= high) {
			mid = (low + high) / 2;
			if (a[mid].compareTo(x) < 0) {
				low = mid + 1;
			} else if (a[mid].compareTo(x) > 0) {
				high = mid + 1;
			} else {
				return mid;
			}
		}
		
		//throw new ItemNotFound("BinSearch fails");
		return -1;
	}
}
